---

- hosts: hosts
  remote_user: root

- hosts: containers
  remote_user: root
  gather_facts: false
  vars:
    lxd_container_config:
      limits.cpu: "{{ lxd_container_limits_cpu | default(2) | string}}"
      limits.memory: "{{ lxd_container_limits_memory | default('2GB') | string }}"
      security.nesting: "{{ lxd_container_security_nesting | default(false) | string }}"
  tasks:
    - name: lxd container installed and started
      community.general.lxd_container:
        name: "{{inventory_hostname}}"
        state: started
        source: "{{ lxd_container_source }}"
        config: "{{ lxd_container_config }}"
        devices: "{{ lxd_container_devices }}"
        profiles: "{{ lxd_container_profiles }}"
        timeout: 600
        ignore_volatile_options: false
      delegate_to: "{{ lxd_host }}"

    - name: make sure host_vars directory is present for host
      local_action: file
      args:
        path: "{{inventory_dir}}/host_vars/{{inventory_hostname}}"
        state: directory

    - name: record variables for lxd container connection in host_vars
      local_action: copy
      args:
        content: # has to be the same as in the last task
          ansible_connection: lxc_ssh
          ansible_host: "{{hostvars[lxd_host].ansible_host|default(lxd_host)}}"
          lxc_host: "{{inventory_hostname}}"
        dest: "{{inventory_dir}}/host_vars/{{inventory_hostname}}/lxd_host.auto.json"

    - name: set lxd container connection facts
      set_fact: # has to be the same as in the next task content argument
        ansible_connection: lxc_ssh
        ansible_host: "{{hostvars[lxd_host].ansible_host|default(lxd_host)}}"
        lxc_host: "{{inventory_hostname}}"


    # - name: install python3 in lxd container
    #   command: lxc exec {{inventory_hostname}} -- apt-get -y install python3
    #   delegate_to: "{{ lxd_host }}"

- hosts: containers
  remote_user: root
